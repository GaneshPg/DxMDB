@using DxMDB.Models
@model DxMDB.Models.Movie

@{
    Layout = "/Views/Shared/_Layout.cshtml";
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Create</title>
    <script src="~/Scripts/jquery-1.10.2.js"></script>
    <script src="~/Scripts/jquery.unobtrusive-ajax.js"></script>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.6-rc.0/css/select2.min.css" rel="stylesheet" />
    <script src="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.6-rc.0/js/select2.min.js"></script>
    @*<style type="text/css">
        /*#dvPreview {
            filter: progid:DXImageTransform.Microsoft.AlphaImageLoader(sizingMethod=image);
            min-height: 400px;
            min-width: 400px;
            display: none;
        }*/

    </style>*@

</head>
<body>

    <div class="container">

        <!-- Modal -->
        <div class="modal fade" id="myModal" role="dialog">
            <div class="modal-dialog">

                <!-- Modal content-->
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal">&times;</button>
                        <h4 class="modal-title">Create</h4>
                    </div>
                    <div class="modal-body" id="ModalBody">
                        <div class="loader col-md-offset-4"></div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                    </div>
                </div>
            </div>
        </div>
    </div>

    @using (Html.BeginForm("Create", "Movies", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>Movie</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.YearOfRelease, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.YearOfRelease, new { htmlAttributes = new { @class = "form-control", min = "1950", max = "2030" } })
                    @Html.ValidationMessageFor(model => model.YearOfRelease, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <label class="control-label col-md-2">Poster Image from file : </label>
                <div class="col-md-10">
                    <input type="file" id="posterFile" name="posterFile" accept="image/*" />
                </div>
                <div class="col-md-10">
                    <button onclick="resetImage($('#posterFile')); event.stopPropagation(); event.preventDefault();">Remove</button>
                </div>
            </div>

            <div id="dvPreview"></div>

            <div class="form-group">
                <label class="control-label col-md-2">Actors</label>
                <div class="col-md-10">
                    <select class="form-control" id="actor" width="500px" name="actor" data-placeholder="Select actors" multiple>
                        @foreach (Actor actor in ViewBag.Actors)
                        {
                            if (ViewBag.ActorsSelected != null && ((List<int>)ViewBag.ActorsSelected).Contains(actor.Id))
                            {
                                <option value="@actor.Id" selected>@actor.Name</option>
                            }
                            else
                            {
                                <option value="@actor.Id">@actor.Name</option>
                            }
                        }
                    </select>
                    <input id="CreateActor" type="button" value="+" class="btn btn-default btnWidth" data-toggle="modal" data-target="#myModal" />
                </div>
            </div>

            <div class="form-group">
                <label class="control-label col-md-2">Producer</label>
                <div class="col-md-10">
                    <select class="form-control" id="producer" width="500px" name="producer" data-placeholder="Selectproducer">
                        @foreach (Producer producer in ViewBag.Producers)
                        {
                            if (ViewBag.ProducerSelected != null && ViewBag.ProducerSelected == producer.Id)
                            {
                                <option value="@producer.Id" selected>@producer.Name</option>
                            }
                            else
                            {
                                <option value="@producer.Id">@producer.Name</option>
                            }
                        }
                    </select>
                    <input id="CreateProducer" type="button" value="+" class="btn btn-default btnWidth" data-toggle="modal" data-target="#myModal" />
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Plot, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Plot, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Plot, "", new { @class = "text-danger", id = "test" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-default" />
                </div>
            </div>
        </div>
    }

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>
</body>
</html>

<script>
    $("#producer").select2();
    $("#actor").select2();

    function resetImage(imageElement) {
        imageElement.wrap('<form>').closest('form').get(0).reset();
        imageElement.unwrap();
    }

    $('#CreateActor').on('click', function () {
        $('.modal-title').html("Create Actor");
        $.ajax({
            type: 'GET',
            url: '/Actors/ModalCreate',
            cache: false,
            success: function (data) {
                $('#ModalBody').html(data);
            }
        });
    });

    $('#CreateProducer').on('click', function () {
        $('.modal-title').html("Create Producer");
        $.ajax({
            cache: false,
            type: 'GET',
            url: '/Producers/ModalCreate',
            success: function (data) {
                $("#ModalBody").html(data);
            }
        });
    });

    //$("#posterFile").change(function () {
    //    var value = $(this).val();
    //    var fileReader = new Filereader();
    //    $("#dvPreview").append("<img />");

    //    reader.onload = function (e) {
    //        $("#dvPreview img").attr("src", e.target.result);
    //    }

    //    var file = $('#posterFile').prop('files');
    //    file = file[0];
    //    reader.readAsDataURL(file);
    //});
</script>
